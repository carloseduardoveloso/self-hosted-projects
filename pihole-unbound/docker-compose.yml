# Pi-hole + Unbound Docker Compose Configuration
# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
# Unbound info at https://unbound.docs.nlnetlabs.nl/

version: '3.8'

networks:
  pihole_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    hostname: pihole
    networks:
      pihole_network:
        ipv4_address: 172.20.0.5
    ports:
      # DNS Ports
      - "53:53/tcp"
      - "53:53/udp"
      # Default HTTP Port
      - "80:80/tcp"
      # Default HTTPs Port. FTL will generate a self-signed certificate
      - "443:443/tcp"
      # Uncomment the line below if you are using Pi-hole as your DHCP server
      #- "67:67/udp"
      # Uncomment the line below if you are using Pi-hole as your NTP server
      - "123:123/udp"
    environment:
      # Set the appropriate timezone for your location (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
      TZ: ${TZ:-America/Sao_Paulo}
      # Set a password to access the web interface
      FTLCONF_webserver_api_password: ${PIHOLE_PASSWORD:-correct horse battery staple}
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
      FTLCONF_dns_listeningMode: 'all'
      # Configure Pi-hole to use Unbound as upstream DNS server
      FTLCONF_dns_upstreamServers: '172.20.0.6#5053'
      # Enable query logging
      FTLCONF_dns_queryLogging: 'true'
      # Set log level
      FTLCONF_debug_database: '1'
      # Performance optimizations
      FTLCONF_dns_cacheSize: '10000'
      # Privacy settings
      FTLCONF_api_privacyMode: '3'
      # Server name for web interface
      VIRTUAL_HOST: ${PIHOLE_HOSTNAME:-pihole.local}
      # Enable DNSSEC validation
      FTLCONF_dns_dnssec: 'true'
    volumes:
      # For persisting Pi-hole's databases and common configuration file
      - './etc-pihole:/etc/pihole'
      # For custom dnsmasq configuration (if needed)
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
      # For logs
      - './var-log:/var/log'
    cap_add:
      # See https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
      # Required if you are using Pi-hole as your DHCP server, else not needed
      - NET_ADMIN
      # Required if you are using Pi-hole as your NTP client to be able to set the host's system time
      - SYS_TIME
      # Optional, if Pi-hole should get some more processing time
      - SYS_NICE
    depends_on:
      unbound:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "dig", "@127.0.0.1", "-p", "53", "google.com"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    dns:
      - 127.0.0.1
      - 172.20.0.6
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=false"

  unbound:
    container_name: unbound
    image: mvance/unbound:latest
    hostname: unbound
    networks:
      pihole_network:
        ipv4_address: 172.20.0.6
    ports:
      # Unbound DNS port (internal use only, can be removed if not needed externally)
      - "5053:53/tcp"
      - "5053:53/udp"
    environment:
      TZ: ${TZ:-America/Sao_Paulo}
      # Performance tuning
      UNBOUND_THREADS: ${UNBOUND_THREADS:-2}
      UNBOUND_CACHE_SIZE: ${UNBOUND_CACHE_SIZE:-256m}
      UNBOUND_VERBOSITY: ${UNBOUND_VERBOSITY:-1}
    volumes:
      # For custom Unbound configuration
      - './unbound-config:/opt/unbound/etc/unbound/'
      # For Unbound logs
      - './unbound-logs:/opt/unbound/var/log'
    healthcheck:
      test: ["CMD", "dig", "@127.0.0.1", "-p", "53", "cloudflare.com", "+short"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=false"

  # Optional: Watchtower for automatic updates
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: ${TZ:-America/Sao_Paulo}
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 86400  # Check for updates daily
      WATCHTOWER_LABEL_ENABLE: "true"  # Only update containers with watchtower label
      WATCHTOWER_INCLUDE_RESTARTING: "true"
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false"  # Don't update watchtower itself
